// <auto-generated />
using System;
using HotelBackendApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelBackendApi.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("HotelBackendApi.Guest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Birthdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<long?>("RoomReservationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Title")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoomReservationId");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("HotelBackendApi.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("DiscountPercentage")
                        .HasColumnType("REAL");

                    b.Property<long?>("RoomReservationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoomReservationId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("HotelBackendApi.OrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("DiscountPercentage")
                        .HasColumnType("REAL");

                    b.Property<long?>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("HotelBackendApi.Room", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TestField")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoomNumber")
                        .IsUnique();

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("HotelBackendApi.RoomReservation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReservationTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("RoomId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomReservations");
                });

            modelBuilder.Entity("HotelBackendApi.Guest", b =>
                {
                    b.HasOne("HotelBackendApi.RoomReservation", null)
                        .WithMany("Guests")
                        .HasForeignKey("RoomReservationId");
                });

            modelBuilder.Entity("HotelBackendApi.Order", b =>
                {
                    b.HasOne("HotelBackendApi.RoomReservation", null)
                        .WithMany("Purchases")
                        .HasForeignKey("RoomReservationId");
                });

            modelBuilder.Entity("HotelBackendApi.OrderItem", b =>
                {
                    b.HasOne("HotelBackendApi.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("HotelBackendApi.RoomReservation", b =>
                {
                    b.HasOne("HotelBackendApi.Room", null)
                        .WithMany("roomReservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotelBackendApi.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("HotelBackendApi.Room", b =>
                {
                    b.Navigation("roomReservations");
                });

            modelBuilder.Entity("HotelBackendApi.RoomReservation", b =>
                {
                    b.Navigation("Guests");

                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
